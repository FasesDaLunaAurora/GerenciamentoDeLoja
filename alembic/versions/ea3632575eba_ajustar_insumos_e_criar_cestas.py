"""ajustar insumos e criar cestas

Revision ID: ea3632575eba
Revises: aff561537c73
Create Date: 2025-09-07 13:21:12.894234

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'ea3632575eba'
down_revision: Union[str, Sequence[str], None] = 'aff561537c73'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('categoria_insumo',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('nome', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('nome')
    )
    op.create_index(op.f('ix_categoria_insumo_id'), 'categoria_insumo', ['id'], unique=False)
    op.create_table('cesta',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('nome', sa.String(), nullable=False),
    sa.Column('categoria', sa.String(), nullable=False),
    sa.Column('valor_custo', sa.Float(), nullable=False),
    sa.Column('valor_venda_minimo', sa.Float(), nullable=False),
    sa.Column('disponivel', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_cesta_id'), 'cesta', ['id'], unique=False)
    op.create_table('insumo',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('nome', sa.String(), nullable=False),
    sa.Column('categoria_id', sa.Integer(), nullable=False),
    sa.Column('preco_custo', sa.Float(), nullable=False),
    sa.Column('preco_venda', sa.Float(), nullable=False),
    sa.Column('quantidade_estoque', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['categoria_id'], ['categoria_insumo.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_insumo_id'), 'insumo', ['id'], unique=False)
    op.create_table('cesta_insumo',
    sa.Column('cesta_id', sa.Integer(), nullable=False),
    sa.Column('insumo_id', sa.Integer(), nullable=False),
    sa.Column('quantidade', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['cesta_id'], ['cesta.id'], ),
    sa.ForeignKeyConstraint(['insumo_id'], ['insumo.id'], ),
    sa.PrimaryKeyConstraint('cesta_id', 'insumo_id')
    )
    op.drop_index(op.f('ix_insumos_id'), table_name='insumos')
    op.drop_table('insumos')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('insumos',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('nome', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('categoria', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('preco_unitario', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('unidade_medida', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('quantidade_estoque', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('insumos_pkey'))
    )
    op.create_index(op.f('ix_insumos_id'), 'insumos', ['id'], unique=False)
    op.drop_table('cesta_insumo')
    op.drop_index(op.f('ix_insumo_id'), table_name='insumo')
    op.drop_table('insumo')
    op.drop_index(op.f('ix_cesta_id'), table_name='cesta')
    op.drop_table('cesta')
    op.drop_index(op.f('ix_categoria_insumo_id'), table_name='categoria_insumo')
    op.drop_table('categoria_insumo')
    # ### end Alembic commands ###
